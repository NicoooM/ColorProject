{"version":3,"sources":["style\\vendors\\_locomotive-scroll.scss","style\\base\\_reset.scss","style\\base\\_typography.scss","style\\vendors\\_media.scss","style\\layout\\_animations.scss","style\\layout\\_layout.scss","style\\abstracts\\_variables.scss","style\\layout\\_scrollbar.scss","style\\components\\_button.scss","style\\pages\\_home.scss","style\\media\\tablette.scss","style\\media\\Phone.scss"],"names":[],"mappings":"AAAA,iGAAA;AACA;EACE,gBAAA;;;AAGF;EACE,yBAAA;EACA,sBAAA;EACA,qBAAA;EACA,iBAAA;;;AAGF;EACE,gBAAA;;;AAGF;EACE,iBAAA;;;AAGF;EACE,aAAA;EACA,qBAAA;EACA,mBAAA;;;AAGF;EACE,qBAAA;EACA,mBAAA;EACA,mBAAA;EACA,YAAA;;;AAGF;EACE,kBAAA;EACA,QAAA;EACA,MAAA;EACA,WAAA;EACA,YAAA;EACA,8BAAA;EACA,wCAAA;EACA,UAAA;;;AAEF;EACE,uBAAA;;;AAEF;;;EAGE,UAAA;;;AAEF;EACE,WAAA;EACA,YAAA;EACA,SAAA;EACA,SAAA;EACA,oBAAA;;;AAEF;EACE,sBAAA;;;AAGF;EACE,kBAAA;EACA,MAAA;EACA,QAAA;EACA,uBAAA;EACA,YAAA;EACA,UAAA;EACA,mBAAA;EACA,WAAA;EACA,oBAAA;EACA,YAAA;;;AAEF;EACE,wBAAA;EACA,gBAAA;;;AAEF;EACE,WAAA;EACA,SAAA;;;AChFF;;;CAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAA;EACA,UAAA;EACA,SAAA;EACA,eAAA;EACA,aAAA;EACA,wBAAA;;;AAGF,gDAAA;AAEA;;;;;;;;;;;EAWE,cAAA;;;AAGF;EACE,cAAA;;;AAGF;;EAEE,gBAAA;;;AAGF;;EAEE,YAAA;;;AAIA;EAEE,WAAA;EACA,aAAA;;;AAKF;EAEE,WAAA;EACA,aAAA;;;AAIJ;EACE,yBAAA;EACA,iBAAA;;;AC9IF;EACE,2BAAA;EACA,+CAAA;;AAGF;EACE,sBAAA;EACA,+CAAA;;AAGF;;;EAGE,2BAAA;;;AAGF;;EAEE,sBAAA;;;AAGF;EACE,kBAAA;;AC8iBE;ED/iBJ;IAGI,eAAA;;;AC4iBA;ED/iBJ;IAMI,eAAA;;;ACyiBA;ED/iBJ;IASI,eAAA;;;;AAGJ;EACE,kBAAA;;ACkiBE;EDniBJ;IAGI,eAAA;;;ACgiBA;EDniBJ;IAMI,eAAA;;;AC6hBA;EDniBJ;IASI,eAAA;;;;AAGJ;EACE,iBAAA;;ACshBE;EDvhBJ;IAGI,eAAA;;;ACohBA;EDvhBJ;IAMI,eAAA;;;ACihBA;EDvhBJ;IASI,eAAA;;;;AAIJ;EACE,eAAA;;ACygBE;ED1gBJ;IAGI,eAAA;;;ACugBA;ED1gBJ;IAMI,eAAA;;;;AAIJ;EACE,eAAA;;AC+fE;EDhgBJ;IAGI,eAAA;;;AC6fA;EDhgBJ;IAMI,eAAA;;;;AE1EJ;EACE;IACE,yBAAA;;EAEF;IACE,2BAAA;;EAEF;IACE,yBAAA;;EAEF;IACE,0BAAA;;EAEF;IACE,yBAAA;;EAEF;IACE,yBAAA;;;AAKJ;;;;;mDAAA;AAOA;;;;EAAA;AAKC;EACC;IACE,0BAAA;IACQ,kBAAA;IACR,UAAA;;EAEF;IACE,yBAAA;IACQ,iBAAA;IACR,UAAA;;;AAGJ;EACE;IACE,0BAAA;IACQ,kBAAA;IACR,UAAA;;EAEF;IACE,yBAAA;IACQ,iBAAA;IACR,UAAA;;;ACvDJ;EACE,uBAAA;;;AAGF;EACE,yBCFW;EDGX,cCLM;;;ACDR;EACE,WAAA;EACA,YAAA;;;AAEF;EACE,mBDHK;ECIL,kBAAA;;;AAEF;EACE,mBAAA;;;AAEF;EACE,mBDXM;;;AEDR;EACE,YAAA;;;ACDF;EAIE,iBAAA;;AAHA;EACE,kBAAA;;AAGF;EACE,qBAAA;EACA,UAAA;EACA,aAAA;EACA,sBAAA;EACA,2BAAA;EACA,eAAA;;AACA;EAEI,qDAAA;EACQ,6CAAA;EAEV,kBAAA;EACA,cAAA;EACA,mBAAA;;AAEF;EACE,oBAAA;EACA,kBAAA;;AAGF;EACE,SAAA;;AAGF;EACE,UAAA;;AAGJ;EACE,YAAA;EACA,kBAAA;;AAEA;EACE,OAAA;EACA,QAAA;;AAGF;EACE,WAAA;;AAEF;EACE,YAAA;;AAGF;EACE,gBAAA;EACA,YAAA;EACA,mFAAA;;AAEF;EACE,qBAAA;EACA,wBAAA;EACA,kBAAA;EACA,kBAAA;;AACA;EACE,gBAAA;EACA,sBAAA;EACA,sBAAA;EACA,6BAAA;EACA,mCAAA;EACA,sCAAA;;AAEF;EACE,gBAAA;EACA,oBAAA;;AAKN;EACE,gBAAA;;AAKA;EACE,iBAAA;;AAEF;EAEE,iBAAA;;AAEF;EACE,mBAAA;;AAEF;EACE,sBAAA;;AAEF;EACE,sBAAA;;AAEF;EACE,aAAA;EACA,8BAAA;;AACA;EACE,UAAA;EACA,kBAAA;;AAIA;EACE,UAAA;EACA,WAAA;EACA,YAAA;EACA,aAAA;EACA,yBH/GA;EGgHA,kBAAA;EACA,MAAA;EACA,OAAA;;AAGJ;EACE,kBAAA;;AACA;EACE,gCAAA;EACA,gBAAA;;AAEF;EACE,YAAA;EACA,cAAA;EACA,iBAAA;;AAEF;EACE,aAAA;EACA,sBAAA;;AACA;EACE,SAAA;EACA,kBAAA;;AAOR;EACJ,aAAA;EACA,2BAAA;;AAGE;EACE,aAAA;EACA,gBAAA;EACA,8BAAA;EACA,yBAAA;EACA,aAAA;EACA,WAAA;EACA,mBAAA;;AAEA;EACE,eAAA;;AAIJ;EACE,SAAA;EACA,kBAAA;;;ANmaA;EOnkBF;IACE,yBJCS;;EIET;IACE,eAAA;;EAEF;IAME,iBAAA;;EALA;IACE,kBAAA;IAEA,WAAA;;EAGF;IACE,qBAAA;IACA,UAAA;IACA,aAAA;IACA,sBAAA;IACA,2BAAA;IACA,eAAA;;EACA;IACE,kBAAA;IACA,cAAA;IACA,mBAAA;;EAEF;IACE,oBAAA;IACA,kBAAA;;EAGF;IACE,SAAA;;EAGF;IACE,UAAA;;EAGJ;IACE,YAAA;IACA,kBAAA;;EAEA;IACE,OAAA;IACA,QAAA;;EAGF;IACE,WAAA;;EAEF;IACE,YAAA;;EAGF;IACE,gBAAA;IACA,YAAA;IACA,mFAAA;;EAGF;IACE,qBAAA;IACA,wBAAA;IACA,kBAAA;IACA,kBAAA;;EACA;IACE,gBAAA;IACA,sBAAA;IACA,sBAAA;IACA,6BAAA;IACA,mCAAA;IACA,sCAAA;;EAEF;IACE,gBAAA;IACA,oBAAA;;EAWJ;IACE,iBAAA;;EAEF;IAEE,iBAAA;;EAEF;IACE,kBAAA;IACA,mBAAA;;EAEF;IACE,sBAAA;;EAEF;IACE,sBAAA;;EAEF;IACE,aAAA;IACA,mBAAA;IACA,sBAAA;;EAEA;IACE,UAAA;IACA,kBAAA;IACA,iBAAA;;EAIA;IACE,UAAA;IACA,WAAA;IACA,YAAA;IACA,aAAA;IACA,yBJ1HJ;II2HI,kBAAA;IACA,MAAA;IACA,OAAA;;EAGJ;IACE,kBAAA;IACA,kBAAA;IACA,aAAA;IACA,mBAAA;IACA,sBAAA;;EACA;IACE,gCAAA;IACA,gBAAA;;EAEF;IACE,4BAAA;IACA,YAAA;IACA,mBAAA;IACA,iBAAA;IACA,kBAAA;;EAEF;IACE,aAAA;IACA,sBAAA;;EACA;IACE,SAAA;IACA,kBAAA;;EAMR;IACE,aAAA;IACA,sBAAA;;EAGJ;IACE,aAAA;IACA,gBAAA;IACA,8BAAA;IACA,yBAAA;IACA,aAAA;IACA,WAAA;IACA,mBAAA;;EAEA;IACE,eAAA;;EAIJ;IACE,SAAA;IACA,kBAAA;;;ACjLR;EACE;IACE,yBAAA;;EAEA;IACE,eAAA;;EAEF;IAIE,iBAAA;;EAHA;IACE,kBAAA;;EAGF;IACE,qBAAA;IACA,UAAA;IACA,aAAA;IACA,sBAAA;IACA,2BAAA;IACA,eAAA;;EACA;IACE,kBAAA;IACA,cAAA;IACA,mBAAA;;EAEF;IACE,oBAAA;IACA,kBAAA;;EAGF;IACE,SAAA;;EAGF;IACE,UAAA;;EAGJ;IACE,YAAA;IACA,kBAAA;;EAEA;IACE,OAAA;IACA,QAAA;;EAGF;IACE,WAAA;;EAEF;IACE,YAAA;;EAGF;IACE,gBAAA;IACA,YAAA;IACA,mFAAA;;EAGF;IACE,qBAAA;IACA,wBAAA;IACA,kBAAA;IACA,kBAAA;;EACA;IACE,gBAAA;IACA,sBAAA;IACA,sBAAA;IACA,6BAAA;IACA,mCAAA;IACA,sCAAA;;EAEF;IACE,gBAAA;IACA,oBAAA;;EAKN;IACE,gBAAA;;EAKA;IACE,iBAAA;;EAEF;IAEE,iBAAA;;EAEF;IACE,kBAAA;IACA,mBAAA;;EAEF;IACE,sBAAA;;EAEF;IACE,sBAAA;;EAEF;IACE,aAAA;IACA,mBAAA;IACA,sBAAA;;EAEA;IACE,UAAA;IACA,kBAAA;;EAIA;IACE,UAAA;IACA,WAAA;IACA,YAAA;IACA,aAAA;IACA,yBLtHJ;IKuHI,kBAAA;IACA,MAAA;IACA,OAAA;;EAGJ;IACE,kBAAA;IACA,kBAAA;;EACA;IACE,gCAAA;IACA,gBAAA;;EAEF;IACE,YAAA;IAEA,iBAAA;;EAEF;IACE,aAAA;IACA,sBAAA;;EACA;IACE,SAAA;IACA,kBAAA;;EAMV;IACE,aAAA;IACA,gBAAA;IACA,8BAAA;IACA,yBAAA;IACA,aAAA;IACA,WAAA;IACA,mBAAA;;EAEA;IACE,eAAA;;EAIJ;IACE,SAAA;IACA,kBAAA","file":"main.3d6386d6.css","sourceRoot":"..\\src","sourcesContent":["/*! locomotive-scroll v4.1.1 | MIT License | https://github.com/locomotivemtl/locomotive-scroll */\nhtml.has-scroll-smooth {\n  overflow: hidden;\n}\n\nhtml.has-scroll-dragging {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.has-scroll-smooth body {\n  overflow: hidden;\n}\n\n.has-scroll-smooth [data-scroll-container] {\n  min-height: 100vh;\n}\n\n[data-scroll-direction=\"horizontal\"] [data-scroll-container] {\n  height: 100vh;\n  display: inline-block;\n  white-space: nowrap;\n}\n\n[data-scroll-direction=\"horizontal\"] [data-scroll-section] {\n  display: inline-block;\n  vertical-align: top;\n  white-space: nowrap;\n  height: 100%;\n}\n\n.c-scrollbar {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 11px;\n  height: 100%;\n  transform-origin: center right;\n  transition: transform 0.3s, opacity 0.3s;\n  opacity: 0;\n}\n.c-scrollbar:hover {\n  transform: scaleX(1.45);\n}\n.c-scrollbar:hover,\n.has-scroll-scrolling .c-scrollbar,\n.has-scroll-dragging .c-scrollbar {\n  opacity: 1;\n}\n[data-scroll-direction=\"horizontal\"] .c-scrollbar {\n  width: 100%;\n  height: 10px;\n  top: auto;\n  bottom: 0;\n  transform: scaleY(1);\n}\n[data-scroll-direction=\"horizontal\"] .c-scrollbar:hover {\n  transform: scaleY(1.3);\n}\n\n.c-scrollbar_thumb {\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: black;\n  opacity: 0.5;\n  width: 7px;\n  border-radius: 10px;\n  margin: 2px;\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n.has-scroll-dragging .c-scrollbar_thumb {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n[data-scroll-direction=\"horizontal\"] .c-scrollbar_thumb {\n  right: auto;\n  bottom: 0;\n}\n","/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n\n/* HTML5 display-role reset for older browsers */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n}\n\nol,\nul {\n  list-style: none;\n}\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote {\n  &:before,\n  &:after {\n    content: \"\";\n    content: none;\n  }\n}\n\nq {\n  &:before,\n  &:after {\n    content: \"\";\n    content: none;\n  }\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n","@font-face {\n  font-family: \"Baskervville\";\n  src: url(./base/fonts/Baskervville-Regular.ttf);\n}\n\n@font-face {\n  font-family: \"Biryani\";\n  src: url(./base/fonts/Biryani-Regular.ttf);\n}\n\nh1,\nh2,\nh3 {\n  font-family: \"Baskervville\";\n}\n\np,\nlabel {\n  font-family: \"Biryani\";\n}\n\nh1 {\n  font-size: 54.93px;\n  @include media(\"<=desktop\") {\n    font-size: 96px;\n  }\n  @include media(\"<=tablet\") {\n    font-size: 72px;\n  }\n  @include media(\"<=phone\") {\n    font-size: 48px;\n  }\n}\nh2 {\n  font-size: 60.75px;\n  @include media(\"<=desktop\") {\n    font-size: 72px;\n  }\n  @include media(\"<=tablet\") {\n    font-size: 48px;\n  }\n  @include media(\"<=phone\") {\n    font-size: 36px;\n  }\n}\nh3 {\n  font-size: 40.5px;\n  @include media(\"<=desktop\") {\n    font-size: 72px;\n  }\n  @include media(\"<=tablet\") {\n    font-size: 48px;\n  }\n  @include media(\"<=phone\") {\n    font-size: 36px;\n  }\n}\n\np {\n  font-size: 18px;\n  @include media(\"<=tablet\") {\n    font-size: 14px;\n  }\n  @include media(\"<=phone\") {\n    font-size: 12px;\n  }\n}\n\nlabel {\n  font-size: 14px;\n  @include media(\"<=tablet\") {\n    font-size: 12px;\n  }\n  @include media(\"<=phone\") {\n    font-size: 10px;\n  }\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  \"phone\": 320px,\n  \"tablet\": 768px,\n  \"desktop\": 1024px,\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"landscape\": \"(orientation: landscape)\",\n  \"portrait\": \"(orientation: portrait)\",\n  \"retina2x\":\n    \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\n  \"retina3x\":\n    \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\",\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1,\n  \"\": 0,\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: \"desktop\" !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists(\"at-error\") {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {\n  }\n}\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {\n}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {\n    }\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == \"max\" and $value <= $no-media-breakpoint-value) or\n        ($prefix == \"min\" and $value > $no-media-breakpoint-value)\n      {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log(\"No operator found in `#{$expression}`.\");\n}\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: \"width\";\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\n}\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log(\"Unknown unit `#{unit($value)}`.\");\n  }\n\n  @if $operator == \">\" {\n    $value: $value + $interval;\n  } @else if $operator == \"<\" {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return \"(#{$prefix}-#{$dimension}: #{$value})\";\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == \"number\" {\n    @return $value;\n  } @else if type-of($value) != \"string\" {\n    $_: im-log(\"Value for `to-number` should be a number or a string.\");\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == \"-\");\n  $numbers: (\n    \"0\": 0,\n    \"1\": 1,\n    \"2\": 2,\n    \"3\": 3,\n    \"4\": 4,\n    \"5\": 5,\n    \"6\": 6,\n    \"7\": 7,\n    \"8\": 8,\n    \"9\": 9,\n  );\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == \"+\" or $first-character == \"-\") {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not(index(map-keys($numbers), $character) or $character == \".\") {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i));\n    }\n\n    @if $character == \".\" {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: (\n    \"px\": 1px,\n    \"cm\": 1cm,\n    \"mm\": 1mm,\n    \"%\": 1%,\n    \"ch\": 1ch,\n    \"pc\": 1pc,\n    \"in\": 1in,\n    \"em\": 1em,\n    \"rem\": 1rem,\n    \"pt\": 1pt,\n    \"ex\": 1ex,\n    \"vw\": 1vw,\n    \"vh\": 1vh,\n    \"vmin\": 1vmin,\n    \"vmax\": 1vmax,\n  );\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log(\"Invalid unit `#{$unit}`.\");\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge(\n    $media-expressions,\n    $tweak-media-expressions\n  ) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\n  {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@keyframes Scroll {\n  0% {\n    transform: translateY(0%);\n  }\n  20% {\n    transform: translateY(-10%);\n  }\n  40% {\n    transform: translateY(0%);\n  }\n  60% {\n    transform: translateY(-5%);\n  }\n  80% {\n    transform: translateY(0%);\n  }\n  100% {\n    transform: translateY(0%);\n  }\n}\n\n\n/* ----------------------------------------------\n * Generated by Animista on 2021-10-10 11:17:36\n * Licensed under FreeBSD License.\n * See http://animista.net/license for more info. \n * w: http://animista.net, t: @cssanimista\n * ---------------------------------------------- */\n\n/**\n * ----------------------------------------\n * animation text-focus-in\n * ----------------------------------------\n */\n @-webkit-keyframes text-focus-in {\n  0% {\n    -webkit-filter: blur(12px);\n            filter: blur(12px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-filter: blur(0px);\n            filter: blur(0px);\n    opacity: 1;\n  }\n}\n@keyframes text-focus-in {\n  0% {\n    -webkit-filter: blur(12px);\n            filter: blur(12px);\n    opacity: 0;\n  }\n  100% {\n    -webkit-filter: blur(0px);\n            filter: blur(0px);\n    opacity: 1;\n  }\n}\n","html {\n  scroll-behavior: smooth;\n}\n\nbody {\n  background-color: $background;\n  color: $blanc;\n}\n","$primary: #fbe0ff;\n$blanc: #f0f0f0;\n$noir: #434343;\n$background: #171717;\n","::-webkit-scrollbar {\n  width: 10px;\n  height: 10px;\n}\n::-webkit-scrollbar-thumb {\n  background: $noir;\n  border-radius: 0px;\n}\n::-webkit-scrollbar-thumb:hover {\n  background: #808080;\n}\n::-webkit-scrollbar-track {\n  background: $blanc;\n}\n",".btn {\n  border: none;\n}\n","main {\n  .elementStyle {\n    position: absolute;\n  }\n  padding-top: 35vh;\n  .citation {\n    margin: 0 auto 0 auto;\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Baskervville\";\n    font-size: 30px;\n    q {\n      \n        -webkit-animation: text-focus-in 2s ease-out forwards;\n                animation: text-focus-in 2s ease-out forwards;\n      \n      text-align: center;\n      display: block;\n      margin-bottom: 4rem;\n    }\n    .citation__author {\n      align-self: flex-end;\n      font-style: italic;\n    }\n\n    #elemPLeftText {\n      left: 10%;\n    }\n\n    #elemPLeftText2Citation {\n      right: 10%;\n    }\n  }\n  .landing {\n    height: 90vh;\n    text-align: center;\n\n    #elemTopLeft {\n      top: 5%;\n      left: 2%;\n    }\n\n    #elemPhraseLeft {\n      left: 150px;\n    }\n    #elemPhraseRight {\n      right: 150px;\n    }\n\n    h1 {\n      font-size: 200px;\n      opacity: 50%;\n      text-shadow: #ffffff 1px 1px, #ffffff -1px 1px, #ffffff -1px -1px, #fdfdfd 1px -1px;\n    }\n    .landing__scroll {\n      display: inline-block;\n      margin: 10vh auto 0 auto;\n      text-align: center;\n      position: relative;\n      svg path:first-child {\n        transition: 0.5s;\n        animation-name: Scroll;\n        animation-duration: 3s;\n        animation-fill-mode: forwards;\n        animation-iteration-count: infinite;\n        animation-timing-function: ease-in-out;\n      }\n      svg path:last-child {\n        transition: 0.5s;\n        transform: scaleY(0);\n      }\n    }\n  }\n\n  .paintings {\n    padding: 0 11.5%;\n    // margin-bottom: 10rem;\n    // ul li {\n    // perspective: 50px;\n    // }\n    ul li:not(:first-child) {\n      margin-top: 20rem;\n    }\n    ul li:last-child {\n      // margin-bottom: 10rem;\n      min-height: 500px;\n    }\n    h2 {\n      margin-bottom: 2rem;\n    }\n    .citation--renoir {\n      margin: 20rem 0 0 auto;\n    }\n    .citation--hopper {\n      margin: 20rem auto 0 0;\n    }\n    .paintings__painting {\n      display: flex;\n      justify-content: space-between;\n      img {\n        width: 50%;\n        position: relative;\n        // transform: translateZ(50px);\n        // -webkit-transform-style: preserve-3d;\n        // transform-style: preserve-3d;\n        &::after {\n          z-index: 2;\n          content: \"\";\n          width: 150px;\n          height: 100px;\n          background-color: $primary;\n          position: absolute;\n          top: 0;\n          left: 0;\n        }\n      }\n      .painting__description {\n        align-self: center;\n        h3 {\n          border-bottom: 2px solid $blanc;\n          max-width: 500px;\n        }\n        p {\n          width: 400px;\n          margin: 2rem 0;\n          line-height: 140%;\n        }\n        .paintings__filter {\n          display: flex;\n          flex-direction: column;\n          input {\n            margin: 0;\n            margin-top: 0.5rem;\n          }\n        }\n      }\n    }\n\n\n    #second-painting{\ndisplay: flex;\nflex-direction: row-reverse;\n    }\n  }\n  .gradient {\n    display: flex;\n    align-items: end;\n    justify-content: space-between;\n    padding: 0 11.5% 2% 11.5%;\n    height: 30rem;\n    width: auto;\n    background: rgb(23, 23, 23);\n\n    p {\n      font-size: 14px;\n    }\n  }\n\n  #elemBottom {\n    right: 3%;\n    margin-top: -240px;\n  }\n}\n","@include media(\"<=desktop\") {\r\n  body {\r\n    background-color: $background;\r\n    //   background-color: red ;\r\n\r\n    h3 {\r\n      font-size: 32px;\r\n    }\r\n    main {\r\n      .elementStyle {\r\n        position: absolute;\r\n        //   transform: scale(0.5) !important;\r\n        width: 35vw;\r\n      }\r\n      padding-top: 35vh;\r\n      .citation {\r\n        margin: 0 auto 0 auto;\r\n        width: 50%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        font-family: \"Baskervville\";\r\n        font-size: 30px;\r\n        q {\r\n          text-align: center;\r\n          display: block;\r\n          margin-bottom: 4rem;\r\n        }\r\n        .citation__author {\r\n          align-self: flex-end;\r\n          font-style: italic;\r\n        }\r\n\r\n        #elemPLeftText {\r\n          left: 10%;\r\n        }\r\n\r\n        #elemPLeftText2Citation {\r\n          right: 10%;\r\n        }\r\n      }\r\n      .landing {\r\n        height: 90vh;\r\n        text-align: center;\r\n\r\n        #elemTopLeft {\r\n          top: 5%;\r\n          left: 2%;\r\n        }\r\n\r\n        #elemPhraseLeft {\r\n          left: 150px;\r\n        }\r\n        #elemPhraseRight {\r\n          right: 150px;\r\n        }\r\n\r\n        h1 {\r\n          font-size: 200px;\r\n          opacity: 50%;\r\n          text-shadow: #ffffff 1px 1px, #ffffff -1px 1px, #ffffff -1px -1px,\r\n            #fdfdfd 1px -1px;\r\n        }\r\n        .landing__scroll {\r\n          display: inline-block;\r\n          margin: 10vh auto 0 auto;\r\n          text-align: center;\r\n          position: relative;\r\n          svg path:first-child {\r\n            transition: 0.5s;\r\n            animation-name: Scroll;\r\n            animation-duration: 3s;\r\n            animation-fill-mode: forwards;\r\n            animation-iteration-count: infinite;\r\n            animation-timing-function: ease-in-out;\r\n          }\r\n          svg path:last-child {\r\n            transition: 0.5s;\r\n            transform: scaleY(0);\r\n          }\r\n        }\r\n      }\r\n\r\n      .paintings {\r\n        //   padding: 0 11.5%;\r\n        // margin-bottom: 10rem;\r\n        // ul li {\r\n        // perspective: 50px;\r\n        // }\r\n        ul li:not(:first-child) {\r\n          margin-top: 20rem;\r\n        }\r\n        ul li:last-child {\r\n          // margin-bottom: 10rem;\r\n          min-height: 500px;\r\n        }\r\n        h2 {\r\n          text-align: center;\r\n          margin-bottom: 2rem;\r\n        }\r\n        .citation--renoir {\r\n          margin: 20rem 0 0 auto;\r\n        }\r\n        .citation--hopper {\r\n          margin: 20rem auto 0 0;\r\n        }\r\n        .paintings__painting {\r\n          display: flex;\r\n          align-items: center;\r\n          flex-direction: column;\r\n\r\n          img {\r\n            width: 50%;\r\n            position: relative;\r\n            object-fit: cover;\r\n            // transform: translateZ(50px);\r\n            // -webkit-transform-style: preserve-3d;\r\n            // transform-style: preserve-3d;\r\n            &::after {\r\n              z-index: 2;\r\n              content: \"\";\r\n              width: 150px;\r\n              height: 100px;\r\n              background-color: $primary;\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n            }\r\n          }\r\n          .painting__description {\r\n            align-self: center;\r\n            text-align: center;\r\n            display: flex;\r\n            align-items: center;\r\n            flex-direction: column;\r\n            h3 {\r\n              border-bottom: 2px solid $blanc;\r\n              max-width: 500px;\r\n            }\r\n            p {\r\n              margin-right: 0px !important;\r\n              width: 400px;\r\n              align-items: center;\r\n              line-height: 140%;\r\n              text-align: center;\r\n            }\r\n            .paintings__filter {\r\n              display: flex;\r\n              flex-direction: column;\r\n              input {\r\n                margin: 0;\r\n                margin-top: 0.5rem;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        #second-painting {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n      }\r\n      .gradient {\r\n        display: flex;\r\n        align-items: end;\r\n        justify-content: space-between;\r\n        padding: 0 11.5% 2% 11.5%;\r\n        height: 30rem;\r\n        width: auto;\r\n        background: rgb(23, 23, 23);\r\n\r\n        p {\r\n          font-size: 14px;\r\n        }\r\n      }\r\n\r\n      #elemBottom {\r\n        right: 3%;\r\n        margin-top: -150px;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@media only screen and (max-width: 600px) {\r\n  body {\r\n    background-color: rgb(252, 0, 231);\r\n\r\n    h3 {\r\n      font-size: 32px;\r\n    }\r\n    main {\r\n      .elementStyle {\r\n        position: absolute;\r\n      }\r\n      padding-top: 35vh;\r\n      .citation {\r\n        margin: 0 auto 0 auto;\r\n        width: 50%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        font-family: \"Baskervville\";\r\n        font-size: 30px;\r\n        q {\r\n          text-align: center;\r\n          display: block;\r\n          margin-bottom: 4rem;\r\n        }\r\n        .citation__author {\r\n          align-self: flex-end;\r\n          font-style: italic;\r\n        }\r\n\r\n        #elemPLeftText {\r\n          left: 10%;\r\n        }\r\n\r\n        #elemPLeftText2Citation {\r\n          right: 10%;\r\n        }\r\n      }\r\n      .landing {\r\n        height: 90vh;\r\n        text-align: center;\r\n\r\n        #elemTopLeft {\r\n          top: 5%;\r\n          left: 2%;\r\n        }\r\n\r\n        #elemPhraseLeft {\r\n          left: 150px;\r\n        }\r\n        #elemPhraseRight {\r\n          right: 150px;\r\n        }\r\n\r\n        h1 {\r\n          font-size: 200px;\r\n          opacity: 50%;\r\n          text-shadow: #ffffff 1px 1px, #ffffff -1px 1px, #ffffff -1px -1px,\r\n            #fdfdfd 1px -1px;\r\n        }\r\n        .landing__scroll {\r\n          display: inline-block;\r\n          margin: 10vh auto 0 auto;\r\n          text-align: center;\r\n          position: relative;\r\n          svg path:first-child {\r\n            transition: 0.5s;\r\n            animation-name: Scroll;\r\n            animation-duration: 3s;\r\n            animation-fill-mode: forwards;\r\n            animation-iteration-count: infinite;\r\n            animation-timing-function: ease-in-out;\r\n          }\r\n          svg path:last-child {\r\n            transition: 0.5s;\r\n            transform: scaleY(0);\r\n          }\r\n        }\r\n      }\r\n\r\n      .paintings {\r\n        padding: 0 11.5%;\r\n        // margin-bottom: 10rem;\r\n        // ul li {\r\n        // perspective: 50px;\r\n        // }\r\n        ul li:not(:first-child) {\r\n          margin-top: 20rem;\r\n        }\r\n        ul li:last-child {\r\n          // margin-bottom: 10rem;\r\n          min-height: 500px;\r\n        }\r\n        h2 {\r\n          text-align: center;\r\n          margin-bottom: 2rem;\r\n        }\r\n        .citation--renoir {\r\n          margin: 20rem 0 0 auto;\r\n        }\r\n        .citation--hopper {\r\n          margin: 20rem auto 0 0;\r\n        }\r\n        .paintings__painting {\r\n          display: flex;\r\n          align-items: center;\r\n          flex-direction: column;\r\n\r\n          img {\r\n            width: 50%;\r\n            position: relative;\r\n            // transform: translateZ(50px);\r\n            // -webkit-transform-style: preserve-3d;\r\n            // transform-style: preserve-3d;\r\n            &::after {\r\n              z-index: 2;\r\n              content: \"\";\r\n              width: 150px;\r\n              height: 100px;\r\n              background-color: $primary;\r\n              position: absolute;\r\n              top: 0;\r\n              left: 0;\r\n            }\r\n          }\r\n          .painting__description {\r\n            align-self: center;\r\n            text-align: center;\r\n            h3 {\r\n              border-bottom: 2px solid $blanc;\r\n              max-width: 500px;\r\n            }\r\n            p {\r\n              width: 400px;\r\n\r\n              line-height: 140%;\r\n            }\r\n            .paintings__filter {\r\n              display: flex;\r\n              flex-direction: column;\r\n              input {\r\n                margin: 0;\r\n                margin-top: 0.5rem;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      .gradient {\r\n        display: flex;\r\n        align-items: end;\r\n        justify-content: space-between;\r\n        padding: 0 11.5% 2% 11.5%;\r\n        height: 30rem;\r\n        width: auto;\r\n        background: rgb(23, 23, 23);\r\n\r\n        p {\r\n          font-size: 14px;\r\n        }\r\n      }\r\n\r\n      #elemBottom {\r\n        right: 3%;\r\n        margin-top: -150px;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}